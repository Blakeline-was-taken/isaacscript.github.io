(self.webpackChunkisaacscript_github_io=self.webpackChunkisaacscript_github_io||[]).push([[58],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return o},kt:function(){return u}});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var _=i.createContext({}),p=function(e){var t=i.useContext(_),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},o=function(e){var t=p(e.components);return i.createElement(_.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,_=e.parentName,o=c(e,["components","mdxType","originalType","parentName"]),d=p(n),u=a,m=d["".concat(_,".").concat(u)]||d[u]||s[u]||r;return n?i.createElement(m,l(l({ref:t},o),{},{components:n})):i.createElement(m,l({ref:t},o))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=d;var c={};for(var _ in t)hasOwnProperty.call(t,_)&&(c[_]=t[_]);c.originalType=e,c.mdxType="string"==typeof e?e:a,l[1]=c;for(var p=2;p<r;p++)l[p]=n[p];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2986:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return _},metadata:function(){return p},toc:function(){return o},default:function(){return d}});var i=n(2122),a=n(9756),r=(n(7294),n(3905)),l=["components"],c={title:"Function Signatures"},_=void 0,p={unversionedId:"function-signatures",id:"function-signatures",isDocsHomePage:!1,title:"Function Signatures",description:"For reference, this is a handy list of all possible callback functions.",source:"@site/docs/function-signatures.md",sourceDirName:".",slug:"/function-signatures",permalink:"/docs/function-signatures",editUrl:"https://github.com/IsaacScript/isaacscript.github.io/edit/main/docs/function-signatures.md",version:"current",frontMatter:{title:"Function Signatures"},sidebar:"sidebar",previous:{title:"Gotchas",permalink:"/docs/gotchas"}},o=[{value:"Vanilla Callbacks",id:"vanilla-callbacks",children:[{value:"MC_NPC_UPDATE (0)",id:"mc_npc_update-0",children:[]},{value:"MC_POST_UPDATE (1)",id:"mc_post_update-1",children:[]},{value:"MC_POST_RENDER (2)",id:"mc_post_render-2",children:[]},{value:"MC_USE_ITEM (3)",id:"mc_use_item-3",children:[]},{value:"MC_POST_PEFFECT_UPDATE (4)",id:"mc_post_peffect_update-4",children:[]},{value:"MC_USE_CARD (5)",id:"mc_use_card-5",children:[]},{value:"MC_FAMILIAR_UPDATE (6)",id:"mc_familiar_update-6",children:[]},{value:"MC_FAMILIAR_INIT (7)",id:"mc_familiar_init-7",children:[]},{value:"MC_EVALUATE_CACHE (8)",id:"mc_evaluate_cache-8",children:[]},{value:"MC_POST_PLAYER_INIT (9)",id:"mc_post_player_init-9",children:[]},{value:"MC_USE_PILL (10)",id:"mc_use_pill-10",children:[]},{value:"MC_ENTITY_TAKE_DMG (11)",id:"mc_entity_take_dmg-11",children:[]},{value:"MC_POST_CURSE_EVAL (12)",id:"mc_post_curse_eval-12",children:[]},{value:"MC_INPUT_ACTION (13)",id:"mc_input_action-13",children:[]},{value:"MC_POST_GAME_STARTED (14)",id:"mc_post_game_started-14",children:[]},{value:"MC_POST_GAME_END (15)",id:"mc_post_game_end-15",children:[]},{value:"MC_PRE_GAME_EXIT (16)",id:"mc_pre_game_exit-16",children:[]},{value:"MC_POST_NEW_LEVEL (17)",id:"mc_post_new_level-17",children:[]},{value:"MC_POST_NEW_ROOM (18)",id:"mc_post_new_room-18",children:[]},{value:"MC_GET_CARD (20)",id:"mc_get_card-20",children:[]},{value:"MC_GET_SHADER_PARAMS (21)",id:"mc_get_shader_params-21",children:[]},{value:"MC_EXECUTE_CMD (22)",id:"mc_execute_cmd-22",children:[]},{value:"MC_PRE_USE_ITEM (23)",id:"mc_pre_use_item-23",children:[]},{value:"MC_PRE_ENTITY_SPAWN (24)",id:"mc_pre_entity_spawn-24",children:[]},{value:"MC_POST_FAMILIAR_RENDER (25)",id:"mc_post_familiar_render-25",children:[]},{value:"MC_PRE_FAMILIAR_COLLISION (26)",id:"mc_pre_familiar_collision-26",children:[]},{value:"MC_POST_NPC_INIT (27)",id:"mc_post_npc_init-27",children:[]},{value:"MC_POST_NPC_RENDER (28)",id:"mc_post_npc_render-28",children:[]},{value:"MC_POST_NPC_DEATH (29)",id:"mc_post_npc_death-29",children:[]},{value:"MC_PRE_NPC_COLLISION (30)",id:"mc_pre_npc_collision-30",children:[]},{value:"MC_POST_PLAYER_UPDATE (31)",id:"mc_post_player_update-31",children:[]},{value:"MC_POST_PLAYER_RENDER (32)",id:"mc_post_player_render-32",children:[]},{value:"MC_PRE_PLAYER_COLLISION (33)",id:"mc_pre_player_collision-33",children:[]},{value:"MC_POST_PICKUP_INIT (34)",id:"mc_post_pickup_init-34",children:[]},{value:"MC_POST_PICKUP_UPDATE (35)",id:"mc_post_pickup_update-35",children:[]},{value:"MC_POST_PICKUP_RENDER (36)",id:"mc_post_pickup_render-36",children:[]},{value:"MC_POST_PICKUP_SELECTION (37)",id:"mc_post_pickup_selection-37",children:[]},{value:"MC_PRE_PICKUP_COLLISION (38)",id:"mc_pre_pickup_collision-38",children:[]},{value:"MC_POST_TEAR_INIT (39)",id:"mc_post_tear_init-39",children:[]},{value:"MC_POST_TEAR_UPDATE (40)",id:"mc_post_tear_update-40",children:[]},{value:"MC_POST_TEAR_RENDER (41)",id:"mc_post_tear_render-41",children:[]},{value:"MC_PRE_TEAR_COLLISION (42)",id:"mc_pre_tear_collision-42",children:[]},{value:"MC_POST_PROJECTILE_INIT (43)",id:"mc_post_projectile_init-43",children:[]},{value:"MC_POST_PROJECTILE_UPDATE (44)",id:"mc_post_projectile_update-44",children:[]},{value:"MC_POST_PROJECTILE_RENDER (45)",id:"mc_post_projectile_render-45",children:[]},{value:"MC_PRE_PROJECTILE_COLLISION (46)",id:"mc_pre_projectile_collision-46",children:[]},{value:"MC_POST_LASER_INIT (47)",id:"mc_post_laser_init-47",children:[]},{value:"MC_POST_LASER_UPDATE (48)",id:"mc_post_laser_update-48",children:[]},{value:"MC_POST_LASER_RENDER (49)",id:"mc_post_laser_render-49",children:[]},{value:"MC_POST_KNIFE_INIT (50)",id:"mc_post_knife_init-50",children:[]},{value:"MC_POST_KNIFE_UPDATE (51)",id:"mc_post_knife_update-51",children:[]},{value:"MC_POST_KNIFE_RENDER (52)",id:"mc_post_knife_render-52",children:[]},{value:"MC_PRE_KNIFE_COLLISION (53)",id:"mc_pre_knife_collision-53",children:[]},{value:"MC_POST_EFFECT_INIT (54)",id:"mc_post_effect_init-54",children:[]},{value:"MC_POST_EFFECT_UPDATE (55)",id:"mc_post_effect_update-55",children:[]},{value:"MC_POST_EFFECT_RENDER (56)",id:"mc_post_effect_render-56",children:[]},{value:"MC_POST_BOMB_INIT (57)",id:"mc_post_bomb_init-57",children:[]},{value:"MC_POST_BOMB_UPDATE (58)",id:"mc_post_bomb_update-58",children:[]},{value:"MC_POST_BOMB_RENDER (59)",id:"mc_post_bomb_render-59",children:[]},{value:"MC_PRE_BOMB_COLLISION (60)",id:"mc_pre_bomb_collision-60",children:[]},{value:"MC_POST_FIRE_TEAR (61)",id:"mc_post_fire_tear-61",children:[]},{value:"MC_PRE_GET_COLLECTIBLE (62)",id:"mc_pre_get_collectible-62",children:[]},{value:"MC_POST_GET_COLLECTIBLE (63)",id:"mc_post_get_collectible-63",children:[]},{value:"MC_GET_PILL_COLOR (64)",id:"mc_get_pill_color-64",children:[]},{value:"MC_GET_PILL_EFFECT (65)",id:"mc_get_pill_effect-65",children:[]},{value:"MC_GET_TRINKET (66)",id:"mc_get_trinket-66",children:[]},{value:"MC_POST_ENTITY_REMOVE (67)",id:"mc_post_entity_remove-67",children:[]},{value:"MC_POST_ENTITY_KILL (68)",id:"mc_post_entity_kill-68",children:[]},{value:"MC_PRE_NPC_UPDATE (69)",id:"mc_pre_npc_update-69",children:[]},{value:"MC_PRE_SPAWN_CLEAN_AWARD (70)",id:"mc_pre_spawn_clean_award-70",children:[]},{value:"MC_PRE_ROOM_ENTITY_SPAWN (71)",id:"mc_pre_room_entity_spawn-71",children:[]}]},{value:"Custom Callbacks",id:"custom-callbacks",children:[{value:"MC_POST_ITEM_PICKUP",id:"mc_post_item_pickup",children:[]},{value:"MC_PRE_ITEM_PICKUP",id:"mc_pre_item_pickup",children:[]}]}],s={toc:o};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,r.kt)("wrapper",(0,i.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"For reference, this is a handy list of all possible callback functions."),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"vanilla-callbacks"},"Vanilla Callbacks"),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"mc_npc_update-0"},"MC_NPC_UPDATE (0)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function NPCUpdate(npc: EntityNPC): void {}\n")),(0,r.kt)("h3",{id:"mc_post_update-1"},"MC_POST_UPDATE (1)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postUpdate(): void {}\n")),(0,r.kt)("h3",{id:"mc_post_render-2"},"MC_POST_RENDER (2)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postRender(): void {}\n")),(0,r.kt)("h3",{id:"mc_use_item-3"},"MC_USE_ITEM (3)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function useItem(\n  collectibleType: CollectibleType | int,\n  rng: RNG,\n  player: EntityPlayer,\n  useFlags: int,\n  activeSlot: int,\n  customVarData: int,\n): boolean | { Discharge: boolean; Remove: boolean; ShowAnim: boolean } | void;\n")),(0,r.kt)("h3",{id:"mc_post_peffect_update-4"},"MC_POST_PEFFECT_UPDATE (4)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPEffectUpdate(player: EntityPlayer): void {}\n")),(0,r.kt)("h3",{id:"mc_use_card-5"},"MC_USE_CARD (5)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function useCard(card: Card | int, player: EntityPlayer, useFlags: int): void {}\n")),(0,r.kt)("h3",{id:"mc_familiar_update-6"},"MC_FAMILIAR_UPDATE (6)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function familiarUpdate(familiar: EntityFamiliar): void {}\n")),(0,r.kt)("h3",{id:"mc_familiar_init-7"},"MC_FAMILIAR_INIT (7)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function familiarInit(familiar: EntityFamiliar): void {}\n")),(0,r.kt)("h3",{id:"mc_evaluate_cache-8"},"MC_EVALUATE_CACHE (8)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function evaluateCache(player: EntityPlayer, cacheFlag: CacheFlag): void {}\n")),(0,r.kt)("h3",{id:"mc_post_player_init-9"},"MC_POST_PLAYER_INIT (9)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPlayerInit(player: EntityPlayer): void {}\n")),(0,r.kt)("h3",{id:"mc_use_pill-10"},"MC_USE_PILL (10)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function usePill(\n  pillEffect: PillEffect | int,\n  player: EntityPlayer,\n  useFlags: int,\n): void {}\n")),(0,r.kt)("h3",{id:"mc_entity_take_dmg-11"},"MC_ENTITY_TAKE_DMG (11)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function entityTakeDmg(\n  tookDamage: Entity,\n  damageAmount: float,\n  damageFlags: DamageFlag,\n  damageSource: EntityRef,\n  damageCountdownFrames: int,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_curse_eval-12"},"MC_POST_CURSE_EVAL (12)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postCurseEval(curses: LevelCurse | int): LevelCurse | int | void {}\n")),(0,r.kt)("h3",{id:"mc_input_action-13"},"MC_INPUT_ACTION (13)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function inputAction(\n  entity: Entity | null,\n  inputHook: InputHook,\n  buttonAction: ButtonAction,\n): boolean | float | void {}\n")),(0,r.kt)("h3",{id:"mc_post_game_started-14"},"MC_POST_GAME_STARTED (14)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postGameStarted(isContinued: boolean): void {}\n")),(0,r.kt)("h3",{id:"mc_post_game_end-15"},"MC_POST_GAME_END (15)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postGameEnd(isGameOver: boolean): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_game_exit-16"},"MC_PRE_GAME_EXIT (16)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preGameExit(shouldSave: boolean): void {}\n")),(0,r.kt)("h3",{id:"mc_post_new_level-17"},"MC_POST_NEW_LEVEL (17)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postNewLevel(): void {}\n")),(0,r.kt)("h3",{id:"mc_post_new_room-18"},"MC_POST_NEW_ROOM (18)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postNewRoom(): void {}\n")),(0,r.kt)("h3",{id:"mc_get_card-20"},"MC_GET_CARD (20)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function getCard(\n  rng: RNG,\n  card: Card | int,\n  includePlayingCards: boolean,\n  includeRunes: boolean,\n  onlyRunes: boolean,\n): Card | int | void {}\n")),(0,r.kt)("h3",{id:"mc_get_shader_params-21"},"MC_GET_SHADER_PARAMS (21)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function getShaderParams(shaderName: string): Record<string, unknown> {}\n")),(0,r.kt)("h3",{id:"mc_execute_cmd-22"},"MC_EXECUTE_CMD (22)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function executeCmd(command: string, parameters: string): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_use_item-23"},"MC_PRE_USE_ITEM (23)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preUseItem(\n  collectibleType: CollectibleType | int,\n  rng: RNG,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_pre_entity_spawn-24"},"MC_PRE_ENTITY_SPAWN (24)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preEntitySpawn(\n  entityType: EntityType | int,\n  variant: int,\n  subType: int,\n  position: Vector,\n  velocity: Vector,\n  spawner: Entity,\n  initSeed: int,\n): [EntityType | int, int, int, int] | void {}\n")),(0,r.kt)("h3",{id:"mc_post_familiar_render-25"},"MC_POST_FAMILIAR_RENDER (25)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postFamiliarRender(\n  entityFamiliar: EntityFamiliar,\n  renderOffset: Vector,\n): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_familiar_collision-26"},"MC_PRE_FAMILIAR_COLLISION (26)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preFamiliarCollision(\n  familiar: EntityFamiliar,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_npc_init-27"},"MC_POST_NPC_INIT (27)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postNPCInit(npc: EntityNPC): void {}\n")),(0,r.kt)("h3",{id:"mc_post_npc_render-28"},"MC_POST_NPC_RENDER (28)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postNPCRender(npc: EntityNPC, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_post_npc_death-29"},"MC_POST_NPC_DEATH (29)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postNPCDeath(npc: EntityNPC): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_npc_collision-30"},"MC_PRE_NPC_COLLISION (30)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preNPCCollision(\n  npc: EntityNPC,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_player_update-31"},"MC_POST_PLAYER_UPDATE (31)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPlayerUpdate(player: EntityPlayer): void {}\n")),(0,r.kt)("h3",{id:"mc_post_player_render-32"},"MC_POST_PLAYER_RENDER (32)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPlayerRender(player: EntityPlayer, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_player_collision-33"},"MC_PRE_PLAYER_COLLISION (33)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function prePlayerCollision(\n  player: EntityPlayer,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_pickup_init-34"},"MC_POST_PICKUP_INIT (34)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPickupInit(pickup: EntityPickup): void {}\n")),(0,r.kt)("h3",{id:"mc_post_pickup_update-35"},"MC_POST_PICKUP_UPDATE (35)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPickupUpdate(pickup: EntityPickup): void {}\n")),(0,r.kt)("h3",{id:"mc_post_pickup_render-36"},"MC_POST_PICKUP_RENDER (36)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPickupRender(pickup: EntityPickup, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_post_pickup_selection-37"},"MC_POST_PICKUP_SELECTION (37)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postPickupSelection(\n  pickup: EntityPickup,\n  variant: PickupVariant | int,\n  subType: int,\n): [PickupVariant | int, int] | void {}\n")),(0,r.kt)("h3",{id:"mc_pre_pickup_collision-38"},"MC_PRE_PICKUP_COLLISION (38)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function prePickupCollision(\n  pickup: EntityPickup,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_tear_init-39"},"MC_POST_TEAR_INIT (39)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postTearInit(tear: EntityTear): void {}\n")),(0,r.kt)("h3",{id:"mc_post_tear_update-40"},"MC_POST_TEAR_UPDATE (40)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postTearUpdate(tear: EntityTear): void {}\n")),(0,r.kt)("h3",{id:"mc_post_tear_render-41"},"MC_POST_TEAR_RENDER (41)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postTearRender(tear: EntityTear, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_tear_collision-42"},"MC_PRE_TEAR_COLLISION (42)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preTearCollision(\n  tear: EntityTear,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_projectile_init-43"},"MC_POST_PROJECTILE_INIT (43)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postProjectileInit(projectile: EntityProjectile): void {}\n")),(0,r.kt)("h3",{id:"mc_post_projectile_update-44"},"MC_POST_PROJECTILE_UPDATE (44)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postProjectileUpdate(projectile: EntityProjectile): void {}\n")),(0,r.kt)("h3",{id:"mc_post_projectile_render-45"},"MC_POST_PROJECTILE_RENDER (45)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postProjectileRender(\n  projectile: EntityProjectile,\n  renderOffset: Vector,\n): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_projectile_collision-46"},"MC_PRE_PROJECTILE_COLLISION (46)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preProjectileCollision(\n  projectile: EntityProjectile,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_laser_init-47"},"MC_POST_LASER_INIT (47)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postLaserInit(laser: EntityLaser): void {}\n")),(0,r.kt)("h3",{id:"mc_post_laser_update-48"},"MC_POST_LASER_UPDATE (48)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postLaserUpdate(laser: EntityLaser): void {}\n")),(0,r.kt)("h3",{id:"mc_post_laser_render-49"},"MC_POST_LASER_RENDER (49)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postLaserRender(laser: EntityLaser, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_post_knife_init-50"},"MC_POST_KNIFE_INIT (50)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postKnifeInit(knife: EntityKnife): void {}\n")),(0,r.kt)("h3",{id:"mc_post_knife_update-51"},"MC_POST_KNIFE_UPDATE (51)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postKnifeUpdate(knife: EntityKnife): void {}\n")),(0,r.kt)("h3",{id:"mc_post_knife_render-52"},"MC_POST_KNIFE_RENDER (52)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postKnifeRender(knife: EntityKnife, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_knife_collision-53"},"MC_PRE_KNIFE_COLLISION (53)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preKnifeCollision(\n  knife: EntityKnife,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_effect_init-54"},"MC_POST_EFFECT_INIT (54)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postEffectInit(effect: EntityEffect): void {}\n")),(0,r.kt)("h3",{id:"mc_post_effect_update-55"},"MC_POST_EFFECT_UPDATE (55)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postEffectUpdate(effect: EntityEffect): void {}\n")),(0,r.kt)("h3",{id:"mc_post_effect_render-56"},"MC_POST_EFFECT_RENDER (56)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postEffectRender(effect: EntityEffect, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_post_bomb_init-57"},"MC_POST_BOMB_INIT (57)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postBombInit(bomb: EntityBomb): void {}\n")),(0,r.kt)("h3",{id:"mc_post_bomb_update-58"},"MC_POST_BOMB_UPDATE (58)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postBombUpdate(bomb: EntityBomb): void {}\n")),(0,r.kt)("h3",{id:"mc_post_bomb_render-59"},"MC_POST_BOMB_RENDER (59)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postBombRender(bomb: EntityBomb, renderOffset: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_bomb_collision-60"},"MC_PRE_BOMB_COLLISION (60)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preBombCollision(\n  bomb: EntityBomb,\n  collider: Entity,\n  low: boolean,\n): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_post_fire_tear-61"},"MC_POST_FIRE_TEAR (61)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postFireTear(tear: EntityTear): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_get_collectible-62"},"MC_PRE_GET_COLLECTIBLE (62)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preGetCollectible(\n  itemPoolType: ItemPoolType,\n  decrease: boolean,\n  seed: int,\n): CollectibleType | int | void {}\n")),(0,r.kt)("h3",{id:"mc_post_get_collectible-63"},"MC_POST_GET_COLLECTIBLE (63)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postGetCollectible(\n  collectibleType: CollectibleType | int,\n  itemPoolType: ItemPoolType,\n  decrease: boolean,\n  seed: int,\n): CollectibleType | int | void {}\n")),(0,r.kt)("h3",{id:"mc_get_pill_color-64"},"MC_GET_PILL_COLOR (64)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function getPillColor(seed: int): PillColor | int | void {}\n")),(0,r.kt)("h3",{id:"mc_get_pill_effect-65"},"MC_GET_PILL_EFFECT (65)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function getPillEffect(\n  pillEffect: PillEffect | int,\n  pillColor: PillColor | int,\n): PillEffect | int | void {}\n")),(0,r.kt)("h3",{id:"mc_get_trinket-66"},"MC_GET_TRINKET (66)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function getTrinket(\n  trinketType: TrinketType | int,\n  rng: RNG,\n): TrinketType | int | void {}\n")),(0,r.kt)("h3",{id:"mc_post_entity_remove-67"},"MC_POST_ENTITY_REMOVE (67)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postEntityRemove(entity: Entity): void {}\n")),(0,r.kt)("h3",{id:"mc_post_entity_kill-68"},"MC_POST_ENTITY_KILL (68)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postEntityKill(entity: Entity): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_npc_update-69"},"MC_PRE_NPC_UPDATE (69)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preNPCUpdate(entity: Entity): boolean | void {}\n")),(0,r.kt)("h3",{id:"mc_pre_spawn_clean_award-70"},"MC_PRE_SPAWN_CLEAN_AWARD (70)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preSpawnClearAward(rng: RNG, spawnPosition: Vector): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_room_entity_spawn-71"},"MC_PRE_ROOM_ENTITY_SPAWN (71)"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preRoomEntitySpawn(\n  entityType: EntityType | int,\n  variant: int,\n  subType: int,\n  gridIndex: int,\n  seed: int,\n): [EntityType | int, int, int] | void {}\n")),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"custom-callbacks"},"Custom Callbacks"),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"mc_post_item_pickup"},"MC_POST_ITEM_PICKUP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function postItemPickup(\n  player: EntityPlayer,\n  pickingUpItem: PickingUpItem,\n): void {}\n")),(0,r.kt)("h3",{id:"mc_pre_item_pickup"},"MC_PRE_ITEM_PICKUP"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-typescript"},"function preItemPickup(\n  player: EntityPlayer,\n  pickingUpItem: PickingUpItem,\n): void {}\n")))}d.isMDXComponent=!0}}]);